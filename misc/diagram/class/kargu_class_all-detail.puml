@startuml

!include kargu_class.iuml

title <b>Kargu</b> | Diagram Kelas\nEntitas & Hubungan Antar Objek (Detail)\n

class KarguDesktopApp {
  -db: Database
  -control: Controller
  +main(String[] args): void
  +quit(): void
}

class KarguDesktopGUI {
  -menuBar: JMenuBar
  -fileMenu, dataMenu, helpMenu: JMenu
  -newDocumentItem, newPageItem, openDocumentItem, saveDocumentItem, saveDocumentAsItem, printDocumentItem, closeDocumentItem, closePageItem, quitAppItem: JMenuItem
  -addEntryItem, editEntryItem, deleteEntryItem, clearEntryItem, resultCompleteItem, resultShortItem: JMenuItem
  -manualItem, aboutItem: JMenuItem
  -controlPanel, managePanel, settingsPanel, entryPanel, resultPanel, versionPanel: JPanel
  -tabbedPage: JTabbedPane
  -entriesTable: JScrollPane
  -settingsLabel, groupLabel, powerLabel, entryLabel, resultLabel, versionLabel: JLabel
  -groupBox: JComboBox
  -groups = { "S1", "S2", "S3", "R1", "R2", "R3" }: String[]
  -powerField: JTextField
  -addEntryButton, editEntryButton, deleteEntryButton, clearEntryButton, resultCompleteButton, resultShortButton, newPageButton: JButton
  -nameListModel: NameListModel
  -nameList: JList
  -controller: Controller
  -document: Document
  -groupRate: Object
  -powerLimit: int

  +KarguDesktopGUI(final Controller controller, final Document document): Constructor
  +getDocument(): Document
  +setDocument(Document document): void
  +reportError(String message): void
  +update(Observable o, Object arg): void
  +getSelectedButtonText(ButtonGroup buttonGroup): String
}

class KarguDesktopCLI {
  -control: Controller
  -document: Document
  -entryTableModel:
  -entryTable:
}

class Controller {
  -db: Database

  +Controller(Database db): Constructor
  +doNewDocument(KarguDesktopGUI gui): void
  +doNewPage(KarguDesktopGUI gui): void
  +doOpenDocument(KarguDesktopGUI gui): void
  +doSaveDocument(KarguDesktopGUI gui): void
  +doSaveDocumentAs(KarguDesktopGUI gui): void
  +doOfferSaveChanges(KarguDesktopGUI gui): void
  +doPrint(KarguDesktopGUI gui): void
  +doAdd(KarguDesktopGUI gui): void
  +doEdit(KarguDesktopGUI gui, int index): void
  +doDelete(KarguDesktopGUI gui, int id): void
  +doClear(KarguDesktopGUI gui, int num): void
  +doResultComplete(KarguDesktopGUI gui, Object group, int power): void
  +doResultShort(KarguDesktopGUI gui, Object group, int power): void
  +doTest(KarguDesktopGUI gui): void
}

class Database {
  +readFile(File doc): Document
  +saveFile(Document book, File doc): void
}

class FormInput {
  -fields: JTextField[]
  -ok: boolean

  +FormInput(String[] prompts, String[] initialValues): Constructor
  +showFormInputDialog(Component parentComponent, String[] prompts, String[] initialValues, String title): String[]
  +showFormInputDialog(Component parentComponent, String[] prompts, String title): String[]
  +showFormInputDialog(Component parentComponent, String[] prompts, String[] initialValues): String[]
  +showFormInputDialog(Component parentComponent, String[] prompts): String[]
}

class FormOutput {

}

class Document {
  -collection: Vector
  -file: File
  -changedSinceLastSave: boolean
  -output: String
  -groupRate: String
  -VA: float
  -KVA: float
  -numEntries: int
  -WH: float
  -dailyWH: float
  -dailyKWH: float
  -monthlyKWH: float
  -activeHour: float
  -subscriptionCost: int
  -usageFeePrepaid: int
  -usageFeePostpaid: int
  -burdenCost: float
  -minAccount: float
  -monthlyCostWithoutTaxPrepaid: float
  -monthlyCostWithoutTaxPostpaid: float
  -monthlyTax: float
  -monthlyCostPrepaid: float
  -monthlyCostPostpaid: float

  +Document(): Constructor
  -resetResult(): void
  +setGroupRate(Object group): void
  +setVA(int power): void
  +setKVA(): void
  +setNumberOfEntries(): void
  +setWH(): void
  +setDailyWH(): void
  +setDailyKWH(): void
  +setMonthlyKWH(): void
  +setDocumentGroup(): void
  +setActiveHour(): void
  +setMinAccount(): void
  +setSubscriptionCost(int num): void
  +setUsageFeePrepaid(int num): void
  +setUsageFeePostpaid(int num): void
  +setBurdenCost(float num): void
  +setMonthlyCostWithoutTaxPrepaid(): void
  +setMonthlyCostWithoutTaxPostpaid(): void
  +setMonthlyTax(): void
  +setMonthlyCostPrepaid(): void
  +setMonthlyCostPostpaid(): void
  +getGroupRate(): String
  +getVA(): float
  +getKVA(): float
  +getNumberOfEntries(): int
  +getWH(): float
  +getDailyWH(): float
  +getDailyKWH(): float
  +getMonthlyKWH(): float
  +getActiveHour(): float
  +getSubscriptionCost(): int
  +getUsageFeePrepaid(): int
  +getUsageFeePostpaid(): int
  +getBurdenCost(): float
  +getMinAccount(): float
  +getMonthlyCostWithoutTaxPrepaid(): float
  +getMonthlyCostWithoutTaxPostpaid(): float
  +getMonthlyTax(): float
  +getMonthlyCostPrepaid(): float
  +getMonthlyCostPostpaid(): float
  +addEntry(int id, String name, String type, int qty, float watt, float hour): void
  +getNameOfEntry(int id): String
  +getEntryCompleteInfo(int id): String
  +getEntryInfo(int id): String[]
  +editEntry(int id, String name, String type, int qty, float watt, float hour): void
  +removeEntry(int id): void
  +clearEntry(): void
  +getEntriesAll(): void
  +printSystem(): void
  +printFrame(): void
  +getFile(): File
  +setFile(File doc): void
  +getTitle(): String
  +getChangedSinceLastSave(): boolean
  +setChanged(boolean changed): void
  +calculateResult(Object group, int power): void
  +displayResultComplete(): void
  +displayResultShort(): void
  +setupTest(): void
}

class Page {
  -title: String
  -totalEntry: int

  +Page(): constructor
  +Page(String title): constructor

  +getID(): String
  +getTitle(): String
  +getTotalEntry(): int
  +getSelectedEntry(): Entry

  +setResult(): String
  +getResultComplete(): String
  +getResultShort(): String
  
  +printSystemAll(): String
  +printFrameAll(): String

  +editPage(String title): void
}

class Entry {
  -id: int
  -name: String
  -type: String
  -qty: int
  -watt: float
  -hour: float

  +Entry(): Constructor
  +Entry(int id, String name, String type, int qty, float watt, float hour): ctor
  +getID(): int
  +getName(): String
  +getType(): String
  +getQty(): int
  +getWatt(): float
  +getHour(): float
  +update(String name, String type, int qty, float watt, float hour): void
}

enum TimeUnit {
  MONTHS = <12
  DAYS = <30
  HOURS = <24
  MINUTES = <60
  SECONDS = <60
}

KarguDesktopApp *-- "1" Controller
KarguDesktopApp *-- "1" Database

Controller ..> FormInput
Controller ..> FormOutput
Controller o-- Database

Controller *-- "1" KarguDesktopGUI
Controller *-- "1" KarguDesktopCLI

Document .l.> TimeUnit
Controller ..> Document
Database ..> Document : manages >
KarguDesktopGUI -- "1" Document : displays >

Document "1" o-- "1..*" Page : contains >
Page "1" o-- "*" Entry : contains >

'hide members

@enduml
