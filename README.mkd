Kargu
=====


Dokumentasi Kargu (lang=id-ID)

Edisi aplikasi [Android](http://android.com)

[![Logo Kargu](https://raw.github.com/mhaidarh/kargu/develop/assets/logo/kargu_logo_text-hor_small.png)](https://github.com/mhaidarh/kargu "Logo Kargu Berwarna")
[![Status Buat](https://secure.travis-ci.org/mhaidarh/kargu.png)](http://travis-ci.org/mhaidarh/kargu/ "Status pembuatan dari Travis CI")

```
Nama        = Kargu
Subnama     = Kalkulator Perkiraan Penggunaan
Nama Edisi  = Energi Listrik
Judul       = Kargu, kalkulator untuk memperkiraan penggunaan energi listrik serta mencanangkan budaya hemat energi
Judul Alt.  = Kargu, mencanangkan budaya hemat energi dengan memperkiraan penggunaan energi listrik
deskripsi pendek  = Kargu adalah aplikasi kalkulator untuk memperkiraan penggunaan energi listrik yang bisa untuk variasi pelanggan prabayar atau pascabayar serta mencanangkan budaya hemat energi dengan aturan biaya oleh PLN.
deskripsi panjang = Terdapat di [deskripsi](/#deskripsi)
Tanggal     = 2013-03-XX XX:XX:XX
Foto Produk = ./screen/kargu_x.x_screen-hr.png
Berkas APK  = ./bin/Kargu_x.x.apk
Kategori    = Energi, Edukasi, Budaya, Referensi, Perkakas
```


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


Deksripsi
---------

**Kar·gu** /kargu/ _n_

Kargu, disingkat dari [Ka]lkulator Perki[r]aan Peng[gu]naan, adalah aplikasi kalkulator sederhana dengan penyesuaian pendekatan ketetapan biaya oleh PLN dan undang-undang yang berlaku. Bermula dari keraguan pada kala ingin membeli dan alat elektronik baru, perlu tahu tagihan yang akan didapat nantinya jika pascabayar atau pulsa yang harus disiapkan jika prabayar.

Pada awalnya bertujuan utama untuk memperkiraan dengan perhitungan terdekat, sehingga belum menggunaan pendekatan simulasi secara nyata. Jadi hanya mencatat penggunaan rata-rata sehari dan mengalikannya untuk sebulan. Sehingga bukan mencatat penggunaan setiap hari dalam sebulan, walaupun fitur tersebut mungkin akan didukung nanti. Akan dilengkapi dengan ekstensi/perluasan pengetahuan budaya nasional (Indonesia) dalam penggunaan listrik sehari-hari di berbagai tempat, golongan tarif, dan kegunaan. Masih dibuat khusus untuk penggunaan energi listrik dan amat sederhana. Tapi jika diperlukan dapat diperluas dengan energi bahan bakar minyak, gas, dan lain-lain.

Kemampuan dan nilai masih dibatasi oleh informasi perhitungan dari PLN dan pemerintah yang belum terbuka dan diketahui secara mudah untuk publik. Sehingga sebagian besar menggunakan perkiraan terdekat yang umumnya dipakai. Juga memang saat ini untuk mempercepat pengembangan awal belum ada pemilihan golongan tarif dengan simbol seperti Rumah Tangga (R1, R2, R3), Sosial (S1, S2), Bisnis (B1, B2), dan lainnya. Lagipula akan lebih memudahkan pengguna untuk memulai tanpa harus mengetahui walaupun bisa agak mengurangi akurasi.

Dibuat berdasarkan pengalaman akan keraguan perhitungan untuk memperkirakan biaya dari penggunaan listrik secara manual. Sebagian besar pengguna atau pelanggan listrik ingin mengetahui dan seharusnya mengetahui lebih mengenai tagihan atau biaya yang perlu disiapkan per bulan tanpa harus berada pada kondisi setelah satu bulan pemakaian listrik. Sehingga bisa menjadi alternatif untuk mengatasi keraguan jika terdapat alat elektronik baru dalam lingkungan yang digunakan. Perlu diketahui bahwa ini masih dalam tahap eksperimen dan bertujuan utama untuk edukasi karena berawal dari tugas pembelajaran.

Perlu diketahui bahwa banyak sekali aplikasi seperti ini dalam berbagai bentuk seperti situs web, aplikasi, dan cara manual. Tapi yang ditekankan dalam aplikasi ini adalah penyesuaian dengan aturan PLN serta preferensi jenis layanan prayabar dan pascabayar. Terlebih lagi proyek ini lebih digagas dengan serius namun tetap santai dan dikembangkan secara terbuka.

### Informasi Tambahan

Dokumentasi seperti petunjuk penggunaan terdapat di [laman dokumentasi/wiki](https://github.com/mhaidarh/kargu/wiki).

Kode sumber aplikasi ini dirilis secara terbuka ( _open source_ ) dalam repositori [Kargu di GitHub](https://github.com/mhaidarh/kargu) dan diberikan secara gratis.

Kode sumber perintis, proyek Kargupy, terdapat dalam repositori [Kargupy di GitHub](https://github.com/mhaidarh/kargupy).

Proyek ini dibuat awal oleh [M Haidar Hanif](https://github.com/mhaidarh). Lengkapnya silakan baca berkas [AUTHORS](AUTHORS).

### Kontribusi

Kontribusi sangat disambut dalam bentuk dan ukuran apa saja seperti:

-  kode program, fitur, perbaikan, terjemahan: Silakan ['garpu'](https://github.com/mhaidarh/kargu/fork_select)( _fork_ ) proyek ini lalu [kirim permintaan tarik](https://github.com/mhaidarh/kargu/pull/new/develop) ( _pull request_ ) di cabang ( _branch_ ) develop.
-  dokumentasi: Silakan edit/sunting [laman dokumentasi/wiki](https://github.com/mhaidarh/kargu/wiki).
-  isu, komentar, permintaan, laporan kerusakan: Silakan tulis di [laman isu](https://github.com/mhaidarh/kargu/issues).
-  berkas multimedia seperti gambar, suara, dan lain-lain: Silakan kirim ke [surel ( _email_ ) ini](mailto:mhaidarhanif@gmail.com).

Harap menggunakan bahasa Inggris untuk pesan perubahan ( _commit message_ ) agar lebih mudah diakses untuk pengembangan. Nanti jika diterima maka akan termasuk dalam rilis stabil selanjutnya dan Anda akan diberi kredit.

### Tips hemat energi

(Untuk orang umum, khususnya Indonesia)

-  Membuat kebiasaan hemat energi menjadi budaya nasional.
-  Menggunakan peralatan listrik seperlunya.
-  Membiasakan mengecek meteran secara berkala.
-  Menyiapkan pulsa/token listrik untuk berjaga-jaga bagi pelanggan listrik prabayar.
-  Menghindari biaya keterlambatan (BK) dengan bersiap setiap bulan atau beralih ke langganan listrik prabayar.
-  Mengcegah penyalahgunaan listrik oleh orang lain.
-  Mengotomatisasi alat elektronik dengan menjadwalkan proses. Seperti di komputer atau ponsel yang terdapat aplikasi untuk menjadwalkan kapan sistemnya akan dihibernasi ( _hibernate_ ) atau dimatikan ( _shut down_ ) secara otomatis setelah pemakaian tertentu. Sehingga baterai dan penggunaan energi lebih irit.
-  Mencegah putusya arus listrik secara tiba-tiba dengan mengetahui batas daya listrik.
-  Mengetahui adanya Penertiban Pemakaian Tenaga Listrik (P2TL).
-  Mengetahui adanya Hari Listrik Nasional (HLN) setiap tanggal 27 Oktober/
-  Mengetahui adanya Jam Bumi ( _Earth Hour_ ) setiap akhir bulan Maret.

### Daftar Berita

-  [Catatan Hari Listrik Nasional Ke-67](http://finance.detik.com/read/2012/10/27/121041/2073884/1034/catatan-hari-listrik-nasional-ke-67)
-  [Budaya Penggunaan Listrik yang Baik Karena Pengetahuan yang Baik](http://id.shvoong.com/writing-and-speaking/presenting/2160587-budaya-penggunaan-listrik-yang-baik)
-  [Budaya Hemat Energi Menjaga Kelangsungan Kelistrikan Nasional](http://palembang.tribunnews.com/m/index.php/08/03/2011/budaya-hemat-energi--menjaga-kelangsungan-kelistrikan-nasional)


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


Log Perubahan
-------------

EUC/Kargupy 0.1-0.8

-  Dirilis awal sebagai [Energy Usage Calculator (EUC)](http://penelitian.gunadarma.ac.id/kommit/jadwal.html)
-  Dirilis ulang sebagai [Kargupy](https://github.com/mhaidarh/kargupy)

Kargu 0.1

-  Membuat skema dan desain dasar
-  Mengumpulkan informasi dan bahan
-  Menambah [README](/README.mkd), [LICENSE](/LICENSE), dan [INSTALL](/INSTALL)
-  Spesifikasi platform:
   - minimum API level 10r2, versi 2.3.3 [Gingerbread](http://developer.android.com/about/versions/android-2.3-highlights.html)
   - maksimum API level 16r4, versi 4.1.2 [Jelly Bean](http://developer.android.com/about/versions/jelly-bean.html)
-  Inisialiasi proyek dengan [Apache Maven™ 3.0.5](http://maven.apache.org) dan [Apache Ant™ 1.9.0](http://ant.apache.org)
-  Ditambah dengan [Android Maven Plugin 3.5.1](https://maven-android-plugin.googlecode.com)
-  Inisialisasi konfigurasi untuk [Jetbrains](http://jetbrains.org) [IntelliJ IDEA 12 CE](http://jetbrains.com/idea)
-  Dengan isi teks pengantar bahasa Indonesia
-  Kode sumber dan wiki dipublikasi di repositori GitHub

Kargu 0.2

-  [Logo asli baru](/assets/logo/kargu_logo.png) dengan [logogram horizontal](/assets/logo/kargu_logo_text-hor.png) dan [vertikal](/assets/logo/kargu_logo_text-ver.png)
   -  Skema: [Palet warna](/assets/logo/colors.mkd)
   -  Fon: [SF Archery Black](http://fontsquirrel.com/fonts/SF-Archery-Black) oleh [ShyFoundry](http://shyfoundry.com/fonts/shareware/sfarcheryb.html)
-  Menggunakan pedoman konvensi gaya kode
   -  [Oracle Code Conventions for the Java Programming Language](http://oracle.com/technetwork/java/codeconv-138413.html)
   -  [Google Code Style Guide](http://google-styleguide.googlecode.com)
-  Pengaturan Maven yang lebih baik
-  Perubahan tata letak dan tema
-  Masukan dasar dengan tombol
-  Menambah beberapa _string_ dan terjemahannya
-  Menambah beberapa komentar dan mempersingkat penulisannya
-  Memungkinkan untuk mengembalikan nilai saat aplikasi dimulai kembali
-  Menambah petunjuk penggunaan
-  Menggunakan pengetesan ( _testing_ ) dengan [Calabash-Android](https://github.com/calabash/calabash-android) (berbasis [Cucumber](http://cukes.info))

Kargu x.x (TODO)

-  Layar muka / _splash screen_ sederhana
-  Antarmuka pengguna / _user interface_ dengan [HoloEverywhere](http://holoeverywhere.org) dan [ActionBarSherlock](http://actionbarsherlock.com)
-  Aset visual tambahan
-  Mengadakan
   -  perihal aplikasi
   -  bantuan pengguna
   -  pengaturan pengguna
-  Menggunakan Integrasi Kontinu ([Continuous Integration (CI)](http://en.wikipedia.org/wiki/Continuous_integration)) [Travis-CI](https://travis-ci.org).


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


Alur Skema
----------

### Skema Simulasi Listrik oleh PLN

Simulasi yang diberikan oleh [Perusahaan Listrik Negara (PT PLN)](http://www.pln.co.id) yaitu [Simulasi Listrik](http://www.pln.co.id/simulasi/tagihan/index.php) memerlukan data pelanggan listrik pascabayar dan hanya dapat mengambil masukan berupa:

*  golongan tarif tanpa simbol
*  batas daya dalam volt ampere (VA)
*  jumlah pemakaian dalam kiloWatt per jam (kWh)

Lalu memberikan keluaran berupa:

*  biaya beban dalam kilovolt ampere per bulan (kVA/bulan)
*  biaya abonemen dalam Rupiah (Rp)
*  jumlah pemakaian dalam kiloWatt per jam (kWh)
*  biaya beban dalam Rupiah (Rp)
*  biaya total dalam Rupiah (Rp)

Di akhir pengguna bisa melakukan perhitungan ulang. Kemungkinan tidak adanya kostumisasi adalah saat itu belum banyak yang menggunakan listrik prabayar.

### Skema Perkiraan oleh Kargu

Inti penyelesaian agak berbeda dengan simulasi biaya oleh PLN atau tabel perhitungan lainnya. Dimana pada umumnya memerlukan informasi penggunaan per bulan yang sudah berlalu (untuk pelanggan listrik pascabayar), sedangkan aplikasi ini hanya memerlukan informasi umum yang telah diketahui secara mudah, baik pelanggan listrik prabayar atau pascabayar, yaitu:

*  batas daya listrik rumah atau tempat tinggal
*  beberapa alat elektronik yang sudah diketahui atau akan dipakai,
*  jenis alat elektronik, atau
*  daya yang dibutuhkan dan waktu penggunaannya berdasarkan perkiraan maksimum

Masukan menjadi seperti:

**Tabel Masukan**

| Variabel     | Ukuran      | Nilai | Blok    |
| ------------ |:-----------:| -----:| ------- |
| Daya Listrik | Volt Ampere |  2200 | Pickers |
| Elektronik   | Watt        |   100 | Text    |
|              | Jam         |    24 | Pickers |

Hasilnya adalah informasi detail mengenai:

*  perbandingan budaya penggunaan daya listrik dengan daerah sekitar,
*  daftar alat elektronik dan atributnya, serta
*  beberapa nilai Watt, kWh, biaya, harga, tagihan, pajak, dan total biaya yang sebaiknya disiapkan; dalam ukuran waktu jam, harian, dan bulanan.

Keluaran menjadi seperti:

**Tabel Hitung**

| Variabel     | Ukuran      | Nilai |
| ------------ |:-----------:| -----:|
| Daya Listrik | Volt Ampere |  2200 |
| Elektronik   | Watt        |   100 |
|              | Jam         |    24 |
|              | Watt/Jam    |  2400 |
| Total        | Watt/Jam    |   100 |
| Pengunaan    | Watt/Hari   |  2400 |
|              | kWh/Hari    |   2.4 |
|              | kWh/Bulan   |  72.0 |

**Tabel Biaya**

| Variabel           | Ukuran      | Nilai  |
| ------------------ |:-----------:| ------:|
| Biaya Langganan    | Rupiah      |  59400 |
| Harga/kWh          | Rupiah      |    650 |
| Biaya/Bulan xPajak |             |        |
|    Prabayar        | Rupiah      |  46800 |
|    Pascabayar      | Rupiah      | 106200 |
| Pajak/Bulan        | Persen      |     10 |
| Biaya/Bulan        |             |        |
|    Prabayar        | Rupiah      |  51480 |
|    Pascabayar      | Rupiah      | 116820 |

Di akhir pengguna bisa melakukan perhitungan ulang. Dan rencananya bisa menyimpan data masukan dan hasil laporan yang didapat.


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


Membangun
---------

Untuk membangunnya direkomendasikan dengan spesifikasi kebutuhan ( _dependency_ ) berikut:

-  Sistem operasi seperti Unix:
   -  Ubuntu
   -  Arch
   -  Mac OS X
-  Git
-  IDE untuk Java seperti Eclipse atau IntelliJ IDEA
-  Ant versi 1.8.0+
-  Maven versi 3.0.0+
-  SDK (KPPL) Android versi 21+
-  Ruby versi 2.0.0+ (untuk tes dengan Calabash)
-  dan lainnya sesuai preferensi Anda

Juga direkomendasikan dengan variabel alamat lintasan ( _path_ ) di konfigurasi shell (bash/zsh/dll) seperti berikut jika belum diatur:

```
export ANDROID_HOME = "/alamat/lintasan/ke/android-sdk/"
export ANDROID_TOOLS = "/alamat/lintasan/ke/android-sdk/tools/"
export ANDROID_PTOOLS = "/alamat/lintasan/ke/android-sdk/platform-tools/"

export JAVA_HOME="/usr/lib/jvm/java-7-oracle"
export ANT_HOME = "/usr/local/apache-ant-1.8.4/"
export MAVEN_HOME = "/usr/local/apache-maven-3.0.5/"
export M3_HOME = "/usr/local/apache-maven-3.0.5/"
export M3 = "/usr/local/apache-maven-3.0.5/"

PATH=$PATH:$ANDROID_TOOLS:$ANDROID_PTOOLS:$ANT_HOME/bin:$MAVEN_HOME/bin:$M2_HOME/bin:$M2/bin
```

Lalu jalankan dengan salah satu perintah berikut:

-  `mvn clean package` untuk membuat APK saja
-  `mvn clean install` untuk membuat APK dan menjalankan tes integrasi (membutuhkan perangkat Android di emulator atau nyata)
-  `ant clean debug` untuk membuat APK mode antikutu ( _debug_ ) saja

Untuk hal pengembangan lain seperti:

-  pengetesan:
   -  [Calabash](http://calaba.sh) versi 0.4.0+ (Instal dengan `sudo gem install calabash-android` jika belum ada)
   -  [Robotium](http://robotium.org)
-  pengendali kebutuhan:
   -  [Roboguice](https://github.com/roboguice/roboguice)
-  pemecahan masalah ( _troubleshooting_ ):
   -  periksa kembali seluruh hal penting yang dibutuhkan
   -  cek jika ada kesalahan ketik


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


Kata-Kata Lain
--------------

### Lisensi

Kode sumber dirilis di bawah [Lisensi MIT](LICENSE).

Berkas gambar, visual, dan suara dirilis di bawah lisensi [Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported](http://creativecommons.org/licenses/by-nc-sa/3.0).

### Ucapan Terima Kasih

-  Google, Android, dan Open Handset Alliance
-  Komunitas Sumber Terbuka
-  Proyek, aplikasi, dan perpus:
   -  Android-Maven-Plugin
   -  ActionBarSherlock
   -  Calabash
   -  RoboGuice
-  dan lain-lain

Bahan, referensi, atau tautan yang belum disebutkan di sini terdapat di [berkas pengembangan](misc/docs/development.mkd) atau mungkin tersebar di beberapa berkas teks berekstensi `.mkd`.


*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


*  [KARGU]: Kalkulator Perkiraan Penggunaan
*  [P2TL]: Penertiban Pemakaian Tenaga Listrik
*  [HLN]: Hari Listrik Nasional
*  [MIT]: Massachusetts Institute of Technology
